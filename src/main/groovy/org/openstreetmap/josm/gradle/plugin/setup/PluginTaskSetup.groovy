package org.openstreetmap.josm.gradle.plugin.setup

import org.gradle.api.Project
import org.gradle.api.tasks.Copy
import org.gradle.api.tasks.Sync
import org.gradle.api.tasks.TaskExecutionException

import org.openstreetmap.josm.gradle.plugin.RunJosmTask

class PluginTaskSetup extends AbstractSetup {
  Project pro

  public void setup() {
    pro.task(
      [type: Copy],
      'updatePluginDependencies',
      {t ->
        doFirst {
          def customConfig = new File("${pro.buildDir}/josm-custom-config/requiredPlugins.xml")
          customConfig.parentFile.mkdirs()
          customConfig.withWriter { out ->
            out.println """<?xml version="1.0" encoding="UTF-8"?>
<!-- No need to edit this file! -->
<!-- This file is being autogenerated (and **overwritten**!) by Gradle each time the task `updatePluginDependencies` runs. -->
<!-- In order to add custom preferences, either edit \$buildDir/.josm/preferences.xml instead. Or create a custom config file next to this file and load it into JOSM via the command line argument - -load-preferences="..." -->
<!--See https://josm.openstreetmap.de/wiki/Help/Preferences/ImportExport for documentation on this format -->
<config>
  <preferences operation="replace">
    <tag key='pluginmanager.time-based-update.policy' value='never'/>
    <tag key='pluginmanager.version-based-update.policy' value='never'/>
    <list key="plugins">"""
            pro.configurations.requiredPlugin.dependencies.each { dep ->
              out.println '      <entry value="' + dep.name + '"/>'
            }
            out.println '      <entry value="' + pro.archivesBaseName + '"/>'
            out.println """    </list>
  </preferences>
</config>"""
          }
          pro.logger.lifecycle 'Copy {} to {}…', source.files, destinationDir
        }
        pro.gradle.projectsEvaluated {
          from pro.configurations.requiredPlugin
          into "${pro.josm.tmpJosmHome}/plugins"
          rename('(.*)-\\.jar', '$1.jar')
        }
      }
    )

    pro.task(
      [type: Sync],
      "renameDistJar",
      {t ->
        from pro.jar.outputs
        into "${pro.buildDir}/dist"
        pro.gradle.projectsEvaluated {
          rename('.*', pro.archivesBaseName + '.' + pro.jar.extension)
        }
      }
    )
    pro.tasks.jar.finalizedBy pro.renameDistJar

    pro.task(
      [type: Copy, description: 'Puts the plugin-JAR generated by the `jar`-task into `build/.josm/`', dependsOn: [pro.renameDistJar, pro.initJosmPrefs, pro.updatePluginDependencies]],
      'updateCurrentPlugin',
      {t ->
        doFirst {
          pro.logger.lifecycle 'Copy {} to {}…', source.files, destinationDir
        }
        pro.updateJosmPlugins.dependsOn t
        pro.gradle.projectsEvaluated {
          from "${pro.buildDir}/dist"
          into "${pro.josm.tmpJosmHome}/plugins"
        }
      }
    )
  }
}

language: groovy

env:
  global:
    - MAIN_REPO="$(pwd)"
    - GH_PAGES_REPO="$(readlink -f ../gh-pages)"

before_script: |
  if [ "$TRAVIS_TAG" == "" ]; then
    echo "Not a tagged release, so GitHub pages branch is not cloned!"
  else
    git clone --depth=1 --branch=gh-pages https://github.com/floscher/gradle-josm-plugin.git "$GH_PAGES_REPO"
    # Copy the existing Maven repo to update it instead of recreating it
    if [ -d "$GH_PAGES_REPO/maven" ]; then
      cp -rT "$GH_PAGES_REPO/maven" "$MAIN_REPO/build/maven"
    fi
  fi
script: ./gradlew build deploy groovydoc
after_success: |
  if [ "$TRAVIS_TAG" == "" ]; then
    echo "Not a tagged release, so GitHub pages are not updated!"
  else
    git config --global user.email "deploy@travis"
    git config --global user.name "Travis CI"
    # This avoids printout of the token when pushing
    git config --global credential.helper store
    echo "https://${GH_USERNAME}:${GH_TOKEN}@github.com" > $HOME/.git-credentials

    version=`git describe --always --dirty`
    cd "$GH_PAGES_REPO"

    cp -r -T "$MAIN_REPO/build/docs/groovydoc" "$GH_PAGES_REPO/groovydoc/$version"
    git rm groovydoc/current
    ln -s "./$version" "groovydoc/current"
    git stage groovydoc

    cp -r "$MAIN_REPO/build/maven" "$GH_PAGES_REPO"
    git stage maven

    git commit -a -m "Update Maven repository and Groovy documentation to $version"
    git push origin gh-pages
  fi
